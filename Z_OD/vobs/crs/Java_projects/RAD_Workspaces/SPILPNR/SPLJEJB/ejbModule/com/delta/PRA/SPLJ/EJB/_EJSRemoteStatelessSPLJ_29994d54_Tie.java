// Tie class generated by rmic, do not edit.
// Contents subject to change without notice.

package com.delta.PRA.SPLJ.EJB;

import com.ibm.ws.http.HttpException;
import com.nwa.PRA.CustExceptions.DBException;
import java.lang.Object;
import java.lang.String;
import java.lang.Throwable;
import java.rmi.Remote;
import java.sql.Timestamp;
import java.util.ArrayList;
import javax.ejb.EJBHome;
import javax.ejb.EJBObject;
import javax.ejb.Handle;
import javax.ejb.RemoveException;
import javax.rmi.CORBA.Tie;
import javax.rmi.CORBA.Util;
import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.ORB;
import org.omg.CORBA.SystemException;
import org.omg.CORBA.portable.Delegate;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.CORBA.portable.UnknownException;

public class _EJSRemoteStatelessSPLJ_29994d54_Tie extends org.omg.CORBA_2_3.portable.ObjectImpl implements Tie {
    
    private EJSRemoteStatelessSPLJ_29994d54 target = null;
    private ORB orb = null;
    
    private static final String[] _type_ids = {
        "RMI:com.delta.PRA.SPLJ.EJB.SPLJ:0000000000000000", 
        "RMI:javax.ejb.EJBObject:0000000000000000", 
        "RMI:com.ibm.websphere.csi.CSIServant:0000000000000000", 
        "RMI:com.ibm.websphere.csi.TransactionalObject:0000000000000000"
    };
    
    public void setTarget(Remote target) {
        this.target = (EJSRemoteStatelessSPLJ_29994d54) target;
    }
    
    public Remote getTarget() {
        return target;
    }
    
    public org.omg.CORBA.Object thisObject() {
        return this;
    }
    
    public void deactivate() {
        if (orb != null) {
            orb.disconnect(this);
            _set_delegate(null);
        }
    }
    
    public ORB orb() {
        return _orb();
    }
    
    public void orb(ORB orb) {
        orb.connect(this);
    }
    
    public void _set_delegate(Delegate del) {
        super._set_delegate(del);
        if (del != null)
            orb = _orb();
        else
            orb = null;
    }
    
    public String[] _ids() { 
        return (String [] )  _type_ids.clone();
    }
    
    public OutputStream _invoke(String method, InputStream _in, ResponseHandler reply) throws SystemException {
        try {
            org.omg.CORBA_2_3.portable.InputStream in = 
                (org.omg.CORBA_2_3.portable.InputStream) _in;
            switch (method.hashCode()) {
                case -2053219342: 
                    if (method.equals("call_other_inquiry_lookup_OD")) {
                        return call_other_inquiry_lookup_OD(in, reply);
                    }
                case -1963787396: 
                    if (method.equals("call_passenger_inquiry_lookup_OD")) {
                        return call_passenger_inquiry_lookup_OD(in, reply);
                    }
                case -1637766080: 
                    if (method.equals("call_ssr_inquiry_lookup")) {
                        return call_ssr_inquiry_lookup(in, reply);
                    }
                case -1550521068: 
                    if (method.equals("_get_EJBHome")) {
                        return _get_EJBHome(in, reply);
                    }
                case -1280298174: 
                    if (method.equals("call_other_inquiry_lookup")) {
                        return call_other_inquiry_lookup(in, reply);
                    }
                case -1278151215: 
                    if (method.equals("call_query_i")) {
                        return call_query_i(in, reply);
                    }
                case -1278151214: 
                    if (method.equals("call_query_j")) {
                        return call_query_j(in, reply);
                    }
                case -1278151213: 
                    if (method.equals("call_query_k")) {
                        return call_query_k(in, reply);
                    }
                case -1278151212: 
                    if (method.equals("call_query_l")) {
                        return call_query_l(in, reply);
                    }
                case -1278151211: 
                    if (method.equals("call_query_m")) {
                        return call_query_m(in, reply);
                    }
                case -1278151210: 
                    if (method.equals("call_query_n")) {
                        return call_query_n(in, reply);
                    }
                case -1278151209: 
                    if (method.equals("call_query_o")) {
                        return call_query_o(in, reply);
                    }
                case -1278151208: 
                    if (method.equals("call_query_p")) {
                        return call_query_p(in, reply);
                    }
                case -1011244123: 
                    if (method.equals("_get_primaryKey")) {
                        return _get_primaryKey(in, reply);
                    }
                case -934610812: 
                    if (method.equals("remove")) {
                        return remove(in, reply);
                    }
                case -515775756: 
                    if (method.equals("call_flight_inquiry_lookup_OD")) {
                        return call_flight_inquiry_lookup_OD(in, reply);
                    }
                case -474415759: 
                    if (method.equals("call_frequent_flier_inquiry_lookup")) {
                        return call_frequent_flier_inquiry_lookup(in, reply);
                    }
                case -238151107: 
                    if (method.equals("call_waitlist_inquiry_lookup")) {
                        return call_waitlist_inquiry_lookup(in, reply);
                    }
                case -214752891: 
                    if (method.equals("call_selected_record_lookup")) {
                        return call_selected_record_lookup(in, reply);
                    }
                case 139287092: 
                    if (method.equals("call_ssr_inquiry_lookup_OD")) {
                        return call_ssr_inquiry_lookup_OD(in, reply);
                    }
                case 146365805: 
                    if (method.equals("_get_testMessage")) {
                        return _get_testMessage(in, reply);
                    }
                case 446546503: 
                    if (method.equals("call_selected_record_lookup_waitlist_OD")) {
                        return call_selected_record_lookup_waitlist_OD(in, reply);
                    }
                case 489151360: 
                    if (method.equals("call_flight_inquiry_lookup")) {
                        return call_flight_inquiry_lookup(in, reply);
                    }
                case 526438167: 
                    if (method.equals("call_waitlist_inquiry_lookup_OD")) {
                        return call_waitlist_inquiry_lookup_OD(in, reply);
                    }
                case 1109328066: 
                    if (method.equals("call_passenger_lookup_waitlist_OD")) {
                        return call_passenger_lookup_waitlist_OD(in, reply);
                    }
                case 1264756395: 
                    if (method.equals("isIdentical")) {
                        return isIdentical(in, reply);
                    }
                case 1272074065: 
                    if (method.equals("call_selected_record_remarks_lookup")) {
                        return call_selected_record_remarks_lookup(in, reply);
                    }
                case 1417588579: 
                    if (method.equals("call_frequent_flier_inquiry_lookup_OD")) {
                        return call_frequent_flier_inquiry_lookup_OD(in, reply);
                    }
                case 1442790234: 
                    if (method.equals("call_on_Demand_Request")) {
                        return call_on_Demand_Request(in, reply);
                    }
                case 1550729330: 
                    if (method.equals("call_passenger_lookup_waitlist")) {
                        return call_passenger_lookup_waitlist(in, reply);
                    }
                case 1797989071: 
                    if (method.equals("call_selected_record_lookup_OD")) {
                        return call_selected_record_lookup_OD(in, reply);
                    }
                case 1811510541: 
                    if (method.equals("call_selected_record_lookup_waitlist")) {
                        return call_selected_record_lookup_waitlist(in, reply);
                    }
                case 1821954040: 
                    if (method.equals("call_passenger_inquiry_lookup")) {
                        return call_passenger_inquiry_lookup(in, reply);
                    }
                case 1862111619: 
                    if (method.equals("call_selected_record_remarks_lookup_OD")) {
                        return call_selected_record_remarks_lookup_OD(in, reply);
                    }
                case 1944413392: 
                    if (method.equals("_get_handle")) {
                        return _get_handle(in, reply);
                    }
            }
            throw new BAD_OPERATION();
        } catch (SystemException ex) {
            throw ex;
        } catch (Throwable ex) {
            throw new UnknownException(ex);
        }
    }
    
    private OutputStream _get_EJBHome(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBHome result = target.getEJBHome();
        OutputStream out = reply.createReply();
        Util.writeRemoteObject(out,result);
        return out;
    }
    
    private OutputStream _get_handle(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Handle result = target.getHandle();
        OutputStream out = reply.createReply();
        Util.writeAbstractObject(out,result);
        return out;
    }
    
    private OutputStream _get_primaryKey(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        Object result = target.getPrimaryKey();
        OutputStream out = reply.createReply();
        Util.writeAny(out,result);
        return out;
    }
    
    private OutputStream isIdentical(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        EJBObject arg0 = (EJBObject) in.read_Object(EJBObject.class);
        boolean result = target.isIdentical(arg0);
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream remove(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        try {
            target.remove();
        } catch (RemoveException ex) {
            String id = "IDL:javax/ejb/RemoveEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,RemoveException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        return out;
    }
    
    private OutputStream _get_testMessage(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String result = target.getTestMessage();
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,String.class);
        return out;
    }
    
    private OutputStream call_waitlist_inquiry_lookup_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        Timestamp arg5 = (Timestamp) in.read_value(Timestamp.class);
        ArrayList result;
        try {
            result = target.call_waitlist_inquiry_lookup_OD(arg0, arg1, arg2, arg3, arg4, arg5);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_other_inquiry_lookup_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_other_inquiry_lookup_OD(arg0, arg1, arg2);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_selected_record_lookup_waitlist_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        Timestamp arg5 = (Timestamp) in.read_value(Timestamp.class);
        ArrayList result;
        try {
            result = target.call_selected_record_lookup_waitlist_OD(arg0, arg1, arg2, arg3, arg4, arg5);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_frequent_flier_inquiry_lookup_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_frequent_flier_inquiry_lookup_OD(arg0, arg1);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_passenger_inquiry_lookup_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_passenger_inquiry_lookup_OD(arg0, arg1);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_selected_record_remarks_lookup_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        Timestamp arg7 = (Timestamp) in.read_value(Timestamp.class);
        ArrayList result;
        try {
            result = target.call_selected_record_remarks_lookup_OD(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_selected_record_lookup_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        Timestamp arg7 = (Timestamp) in.read_value(Timestamp.class);
        ArrayList result;
        try {
            result = target.call_selected_record_lookup_OD(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_on_Demand_Request(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        boolean result;
        try {
            result = target.call_on_Demand_Request(arg0, arg1, arg2, arg3);
        } catch (HttpException ex) {
            String id = "IDL:com/ibm/ws/http/HttpEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,HttpException.class);
            return out;
        }
        OutputStream out = reply.createReply();
        out.write_boolean(result);
        return out;
    }
    
    private OutputStream call_flight_inquiry_lookup_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_flight_inquiry_lookup_OD(arg0, arg1, arg2, arg3, arg4);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_flight_inquiry_lookup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_flight_inquiry_lookup(arg0, arg1, arg2, arg3, arg4);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_passenger_inquiry_lookup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_passenger_inquiry_lookup(arg0, arg1);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_frequent_flier_inquiry_lookup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_frequent_flier_inquiry_lookup(arg0, arg1);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_other_inquiry_lookup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_other_inquiry_lookup(arg0, arg1, arg2);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_waitlist_inquiry_lookup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_waitlist_inquiry_lookup(arg0, arg1, arg2, arg3, arg4);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_selected_record_lookup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_selected_record_lookup(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_selected_record_remarks_lookup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        String arg5 = (String) in.read_value(String.class);
        String arg6 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_selected_record_remarks_lookup(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_selected_record_lookup_waitlist(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        String arg4 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_selected_record_lookup_waitlist(arg0, arg1, arg2, arg3, arg4);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_passenger_lookup_waitlist(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_passenger_lookup_waitlist(arg0, arg1, arg2, arg3);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_query_i(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_query_i(arg0);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_query_j(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.call_query_j();
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_query_k(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.call_query_k();
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_query_l(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.call_query_l();
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_query_m(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.call_query_m();
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_query_n(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.call_query_n();
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_query_o(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.call_query_o();
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_query_p(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        ArrayList result;
        try {
            result = target.call_query_p();
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_ssr_inquiry_lookup(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_ssr_inquiry_lookup(arg0, arg1, arg2, arg3);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_passenger_lookup_waitlist_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        Timestamp arg4 = (Timestamp) in.read_value(Timestamp.class);
        ArrayList result;
        try {
            result = target.call_passenger_lookup_waitlist_OD(arg0, arg1, arg2, arg3, arg4);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
    
    private OutputStream call_ssr_inquiry_lookup_OD(org.omg.CORBA_2_3.portable.InputStream in , ResponseHandler reply) throws Throwable {
        String arg0 = (String) in.read_value(String.class);
        String arg1 = (String) in.read_value(String.class);
        String arg2 = (String) in.read_value(String.class);
        String arg3 = (String) in.read_value(String.class);
        ArrayList result;
        try {
            result = target.call_ssr_inquiry_lookup_OD(arg0, arg1, arg2, arg3);
        } catch (DBException ex) {
            String id = "IDL:com/nwa/PRA/CustExceptions/DBEx:1.0";
            org.omg.CORBA_2_3.portable.OutputStream out = 
                (org.omg.CORBA_2_3.portable.OutputStream) reply.createExceptionReply();
            out.write_string(id);
            out.write_value(ex,DBException.class);
            return out;
        }
        org.omg.CORBA_2_3.portable.OutputStream out = 
            (org.omg.CORBA_2_3.portable.OutputStream) reply.createReply();
        out.write_value(result,ArrayList.class);
        return out;
    }
}
